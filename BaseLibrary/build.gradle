import com.attrsense.android.Deps

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    //https://www.jianshu.com/p/a69694b5be7e
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
}
kapt {
    correctErrorTypes = true
}
android {
    namespace 'com.attrsense.android.baselibrary'
    compileSdk Deps.compileSdk

    defaultConfig {
        minSdk Deps.minSdk
        targetSdk Deps.targetSdk
        multiDexEnabled = Deps.multiDexEnabled
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Deps.sourceCompatibility
        targetCompatibility Deps.targetCompatibility
    }
    kotlinOptions {
        jvmTarget = Deps.jvmTarget
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    //测试库
    testApi Deps.junit
    androidTestApi Deps.jUnitExt
    androidTestApi Deps.espressoCore
    testImplementation Deps.mockk
    debugImplementation Deps.leakcanaryAndroid
    implementation Deps.okHttpProfiler
//    debugImplementation Deps.debugDB //debug 数据库
//    api Deps.legacySupportV4

    api Deps.multidex
    api Deps.coreKtx
    api Deps.appcompat
    api Deps.material
    api Deps.constraintLayout
    api Deps.swipeRefreshLayout
    api Deps.recyclerview
    api Deps.baseRecyclerViewAdapterHelper
    api Deps.cardView
    api Deps.viewpager2
    api Deps.splashscreen
    api Deps.coroutinesCoreKtx
    api Deps.coroutinesAndroidKtx
    api Deps.coroutinesRx2Ktx
    api Deps.serializationJsonKtx
    api Deps.reflectKtx

//    api Deps.roomKtx
//    api Deps.roomRuntime
//    api Deps.roomPaging
//    kapt Deps.roomCompiler
//    api Deps.navigationFragmentKtx
//    api Deps.navigationUiKtx
//    api Deps.navigationDynamicFeaturesFragment
//
//    api Deps.pagingRuntime
//    testImplementation Deps.pagingCommon
//    api Deps.pagingRxjava2

    //所有使用到的模块都要加上这两个依赖
    api Deps.hiltDaggerAndroid
    kapt Deps.hiltDaggerCompiler
//    api Deps.hiltWork
//    kapt Deps.hiltCompiler
//    api Deps.hiltNavigationFragment

//    api Deps.arouterApi
//    kapt Deps.arouterCompiler

//    api Deps.rxjava
    api Deps.rxAndroid
    api Deps.rxBinding

    api Deps.rxLifecycle
    api Deps.rxLifecycleAndroid
    api Deps.rxLifecycleComponents

    api Deps.lifecycleRuntimeKtx
    api Deps.lifecycleViewModelKtx
    api Deps.lifecycleViewModelSavedState
    api Deps.lifecycleLivedataKtx
    api Deps.lifecycleLivedataCoreKtx
    kapt Deps.lifecycleCompiler
    api Deps.lifecycleService
    api Deps.lifecycleProcess
    api Deps.lifecycleReactivestreamsKtx

    api Deps.activityKtx
    api Deps.fragmentKtx

    api Deps.retrofit2
    api Deps.retrofit2ConverterGson
    api Deps.retrofit2AdapterRxjava2
    api Deps.okhttp3LoggingInterceptor
    api Deps.retrofit2CoroutinesAdapterKtx


    api Deps.photoView
    api Deps.circleImageview
    api Deps.immersionBar
    api Deps.immersionBarKtx
    api Deps.systemBarTint
    api Deps.aspectJrt
    api Deps.rxPermissions
    api Deps.reactiveNetwork
    api Deps.logger
    api Deps.utilCodex
    api Deps.mmkv
}