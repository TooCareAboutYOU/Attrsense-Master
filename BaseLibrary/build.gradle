
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    //https://www.jianshu.com/p/a69694b5be7e
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
}

kapt {
    correctErrorTypes = true
}
android {
    namespace 'com.attrsense.android.baselibrary'
    compileSdk rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdk rootProject.ext.android["minSdkVersion"]
        targetSdk rootProject.ext.android["targetSdkVersion"]
        multiDexEnabled = rootProject.ext.android["multiDexEnabled"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.android["jvmTarget"]
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    //测试库
    testApi rootProject.ext.dependencies["junit"]
    androidTestApi rootProject.ext.dependencies["jUnitExt"]
    androidTestApi rootProject.ext.dependencies["espressoCore"]
//    debugImplementation rootProject.ext.dependencies["toolargetool"]
//    testImplementation rootProject.ext.dependencies["mockk"]
    debugImplementation rootProject.ext.dependencies["leakcanaryAndroid"]
    implementation rootProject.ext.dependencies["okHttpProfiler"]
    debugImplementation rootProject.ext.dependencies["debugDB"] //debug 数据库
//    api rootProject.ext.dependencies["legacySupportV4"]

    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["coreKtx"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraintLayout"]
    api rootProject.ext.dependencies["swipeRefreshLayout"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
    api rootProject.ext.dependencies["cardView"]
    api rootProject.ext.dependencies["viewpager2"]
    api rootProject.ext.dependencies["splashscreen"]
    api rootProject.ext.dependencies["coroutinesCoreKtx"]
    api rootProject.ext.dependencies["coroutinesAndroidKtx"]
    api rootProject.ext.dependencies["coroutinesRx2Ktx"]
    api rootProject.ext.dependencies["serializationJsonKtx"]
    api rootProject.ext.dependencies["reflectKtx"]

    //所有使用到的模块都要加上这两个依赖
    api rootProject.ext.dependencies["hiltDaggerAndroid"]
    kapt rootProject.ext.dependencies["hiltDaggerCompiler"]
//    api rootProject.ext.dependencies["hiltWork"]
//    kapt rootProject.ext.dependencies["hiltCompiler"]
//    api rootProject.ext.dependencies["hiltNavigationFragment"]

//    api rootProject.ext.dependencies["navigationFragmentKtx"]
//    api rootProject.ext.dependencies["navigationUiKtx"]
//    api rootProject.ext.dependencies["navigationDynamicFeaturesFragment"]
//
//    api rootProject.ext.dependencies["pagingRuntime"]
//    testImplementation rootProject.ext.dependencies["pagingCommon"]
//    api rootProject.ext.dependencies["pagingRxjava2"]


//    api rootProject.ext.dependencies["arouterApi"]
//    kapt rootProject.ext.dependencies["arouterCompiler"]

//    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxAndroid"]
    api rootProject.ext.dependencies["rxBinding"]


    api rootProject.ext.dependencies["rxLifecycle"]
    api rootProject.ext.dependencies["rxLifecycleAndroid"]
    api rootProject.ext.dependencies["rxLifecycleComponents"]

    api rootProject.ext.dependencies["lifecycleRuntimeKtx"]
    api rootProject.ext.dependencies["lifecycleViewModelKtx"]
    api rootProject.ext.dependencies["lifecycleViewModelSavedState"]
    api rootProject.ext.dependencies["lifecycleLivedataKtx"]
    api rootProject.ext.dependencies["lifecycleLivedataCoreKtx"]
    kapt rootProject.ext.dependencies["lifecycleCompiler"]
    api rootProject.ext.dependencies["lifecycleService"]
    api rootProject.ext.dependencies["lifecycleProcess"]
    api rootProject.ext.dependencies["lifecycleReactivestreamsKtx"]

    api rootProject.ext.dependencies["activityKtx"]
    api rootProject.ext.dependencies["fragmentKtx"]

    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["retrofit2ConverterGson"]
    api rootProject.ext.dependencies["retrofit2AdapterRxjava2"]
    api rootProject.ext.dependencies["okhttp3LoggingInterceptor"]
    api rootProject.ext.dependencies["retrofit2CoroutinesAdapterKtx"]

    api rootProject.ext.dependencies["circleImageview"]
    api rootProject.ext.dependencies["immersionBar"]
    api rootProject.ext.dependencies["immersionBarKtx"]
    api rootProject.ext.dependencies["systemBarTint"]
    api rootProject.ext.dependencies["aspectJrt"]
    api rootProject.ext.dependencies["rxPermissions"]
    api rootProject.ext.dependencies["reactiveNetwork"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["utilCodex"]
    api rootProject.ext.dependencies["mmkv"]
    api rootProject.ext.dependencies["photoView"]
    api rootProject.ext.dependencies["imageSelector"]
//    api rootProject.ext.dependencies["exifinterface"]
    api rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glideCompiler"]
}